name: Test Nintendo setup

on:
  workflow_dispatch:

env:
  WORKSPACE: ${{ github.workspace }}
  DEVELOPER_DIR: /Applications/Xcode_14.1.app/Contents/Developer
  BUILD_NUMBER: 3684
  YEAR: 2022
  FORK_BUILD_NAME: a

jobs:
  source-code:
    name: Check out and process source code
    if: "!contains(github.ref, 'refs/tags/') || github.repository == 'pouwelsjochem/corona'"
    runs-on: macos-12
    steps:
      - run: CDR="$(basename "$(pwd)")" ; cd .. ; rm -rf "$CDR" ; mkdir -p "$CDR" ; cd "$CDR"
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: ./tools/GHAction/daily_env.sh
      - name: Set daily build
        run: ./tools/GHAction/process_sources.sh
      - name: Upload Source bundle
        uses: actions/upload-artifact@v3
        with:
          name: SourceCode
          path: ./output

  native:
    needs: source-code
    runs-on: macos-12
    steps:
      - run: CDR="$(basename "$(pwd)")" ; cd .. ; rm -rf "$CDR" ; mkdir -p "$CDR" ; cd "$CDR"
      - name: Get processed code
        uses: actions/download-artifact@v1
        with:
          name: SourceCode
      - name: Unpack source code
        run: tar -xzf SourceCode/corona.tgz
      - run: ./tools/GHAction/daily_env.sh
      - name: Build Native
        run: ./tools/GHAction/build_native.sh
        env:
          CERT_PASSWORD: ${{ secrets.CertPassword }}
      - name: Upload Corona Native
        uses: actions/upload-artifact@v3
        with:
          name: Native
          path: ./output

  Windows-Simulator:
    needs:
      - source-code
      - native
    runs-on: windows-2019
    steps:
      - name: Get processed code
        uses: actions/download-artifact@v1
        with:
          name: SourceCode
      - name: Unpack source code
        run: |
          7z x SourceCode/corona.tgz
          7z x corona.tar
      - name: Checkout Switch specific source code (under NDA)
        uses: actions/checkout@v3
        with:
          repository: pouwelsjochem/solar2d-platform-switch
          token: ${{ secrets.PLATFORM_SWITCH_REPO_PAT }}
          path: platform\switch
      - run: ./tools/GHAction/daily_env.sh
        shell: bash
      - run: mkdir -f docs
      - name: Move docs outside the directory
        run: mv docs ../docs
      - name: Get Corona Native
        uses: actions/download-artifact@v1
        with:
          name: Native
      - name: Put native in place
        shell: cmd
        run: |
          mkdir "%WORKSPACE%\platform\windows\Bin"
          cd "%WORKSPACE%\platform\windows\Bin"
          rmdir /s /q "Native"
          tar -xvzf "%WORKSPACE%\Native\CoronaNative.tar.gz"
          rm ._CoronaEnterprise
          mv CoronaEnterprise Native
          del /q /f Native\.*
          del /q /f Native\Icon?
          del /q /f /s Native\Corona\tvos\frameworks\CoronaCards.framework
      - name: Put JRE in place
        shell: bash
        run: |
          curl -sL https://github.com/coronalabs/binary-data/releases/download/1.0/jre.win32.7z -o jre.win32.7z
          7z x jre.win32.7z -o"platform/windows/Bin" -y
      - name: Put redistributables in place
        shell: bash
        run: |
          curl -sL https://github.com/coronalabs/binary-data/releases/download/1.0/redist.win32.7z -o redist.win32.7z
          7z x redist.win32.7z -o"platform/windows/Bin/redist" -y
      - name: Download Solar2D Nintendo Dev Environment
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://mega.nz/MEGAcmdSetup64.exe" -OutFile "megacmd_setup.exe"
          .".\megacmd_setup.exe" /S | Write-Verbose
          $env:PATH += ";$env:LOCALAPPDATA\MEGAcmd"
          mega-login "${{ secrets.MEGA_NZ_USERNAME }}" "${{ secrets.MEGA_NZ_PASSWORD }}"
          mega-get -m "solar2d_environment.megazarf" "C:\solar2d_environment.megazarf"
          mega-get -m "ndi_setup-2.5.5.exe" "C:\ndi_setup-2.5.5.exe"
      - name: Install Solar2D Nintendo Dev Environment
        shell: pwsh
        run: |
          ."C:\ndi_setup-2.5.5.exe" /SILENT | Write-Verbose

          $GS_FILE = "$env:LocalAppData\Nintendo\NDI\NDICmdGS.json"
          ."$env:ProgramFiles\Nintendo\Nintendo Dev Interface\NDICmd.exe" SaveGS "$GS_FILE"
          (Get-Content "$GS_FILE").Replace("`"UserName`": null", "`"UserName`": `"${{ secrets.NINTENDO_DEVELOPER_ID }}`"") | Set-Content "$GS_FILE"
          (Get-Content "$GS_FILE").Replace("`"NonInteractivePassword`": `"`"", "`"NonInteractivePassword`": `"${{ secrets.NINTENDO_DEVELOPER_PASSWORD }}`"") | Set-Content "$GS_FILE"
          (Get-Content "$GS_FILE").Replace("`"Name`": null", "`"Name`": `"Solar2D`"") | Set-Content "$GS_FILE"
          (Get-Content "$GS_FILE").Replace("`"RootDir`": null", "`"RootDir`": `"C:\\Nintendo`"") | Set-Content "$GS_FILE"

          ."$env:ProgramFiles\Nintendo\Nintendo Dev Interface\NDICmd.exe" mz Install "C:\solar2d_environment.megazarf"
      - name: Put nxtemplate in place
        shell: cmd
        run: |
          set NINTENDO_SDK_ROOT=C:\Nintendo\Solar2D\NintendoSDK

          call platform\switch\build_release_template.bat
          mv platform\switch\nxtemplate platform\windows\Bin\Corona\Resources
      - name: Build Corona Simulator
        shell: cmd
        run: |
          cd platform\windows
          call UpdateFileVersions.bat %BUILD_NUMBER%
          call Build.Tools\VSVars.bat
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
          devenv "Corona.SDK.sln" /rebuild "Release|x86"
        env:
          WIN_CERT_PASSWORD: ${{ secrets.WinCertPassword }}
      - name: Copy Simulator
        run: |
          mkdir output
          cp -v ./platform/windows/Bin/Corona.SDK.Installer/Corona.msi output/Solar2D-${{ env.YEAR }}.${{ env.BUILD }}.${{ env.FORK_BUILD_NAME }}.msi
        shell: bash
      - name: Upload Windows Corona artifact
        uses: actions/upload-artifact@v3
        with:
          name: Simulator-Windows
          path: ./output